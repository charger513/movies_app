// Mocks generated by Mockito 5.0.15 from annotations
// in movies_app/test/movies/data/repositories/movies_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_app/core/network/network_info.dart' as _i5;
import 'package:movies_app/movies/data/datasources/movies_remote_data_source.dart'
    as _i3;
import 'package:movies_app/movies/data/models/movie_collection_model.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeMovieCollectionModel_0 extends _i1.Fake
    implements _i2.MovieCollectionModel {}

/// A class which mocks [MoviesRemoteDataSourceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesRemoteDataSourceInterface extends _i1.Mock
    implements _i3.MoviesRemoteDataSourceInterface {
  MockMoviesRemoteDataSourceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.MovieCollectionModel> getPlayingNow({int? page = 1}) =>
      (super.noSuchMethod(Invocation.method(#getPlayingNow, [], {#page: page}),
              returnValue: Future<_i2.MovieCollectionModel>.value(
                  _FakeMovieCollectionModel_0()))
          as _i4.Future<_i2.MovieCollectionModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfoInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfoInterface extends _i1.Mock
    implements _i5.NetworkInfoInterface {
  MockNetworkInfoInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}
